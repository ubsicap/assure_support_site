version: "3.8"

services:
  # Configuration fot the Apache container running the Q2A site
  php-apache-environment:
    container_name: q2a-apache              # Custom name for the q2a Apache server
    build:                                  # Build a new image
      context: ./q2a_site                   # Source of the container
      dockerfile: Dockerfile                # Dockerfile to build from
    image: q2a-php-apache                   # Name of the image of the Apache server being created
    depends_on:                             # Ensure this container starts *after* the DB container is running
      - "db"                                # Must be the name of the database *container*
    volumes:                                # Make sure the host (left) location is the folder containing `index.php`
      - ./q2a_site:/var/www/html/           # Allow the server to launch `index.php`
    ports:                                  # Define what ports should be open for traffic
      - "80:80"                             # Open 80 on the host to allow HTTP traffic
      - "8000:80"                           # Keep 8000 open for localhost usage

  # Configuration for the Q2A database container
  db:
    container_name: q2a-db                  # DB name. Note that this is used for the `QA_MYSQL_HOSTNAME` env var in `qa-config.php` in the Q2A container
    image: mysql                            # Using a mySQL database
    restart: always                         # Always restart the container. See `https://www.cloudbees.com/blog/ensuring-containers-are-always-running-with-dockers-restart-policy` for more restart policies
    environment:                            # Setting the mySQL environment variables
      # Not set in `qa-config.php`
      MYSQL_ROOT_PASSWORD: ROOT_PASSWORD_TO_REPLACE
      # Name of the *database*, not the container
      MYSQL_DATABASE: DATABASE_TO_REPLACE
      # Username used in `qa-config.php`
      MYSQL_USER: USERNAME_TO_REPLACE
      # Password used in `qa-config.php`
      MYSQL_PASSWORD: PASSWORD_TO_REPLACE
    ports:                                  # Disclaimer: I got these ports from `https://www.section.io/engineering-education/dockerized-php-apache-and-mysql-container-development-environment/`
      - "9906:3306"                         # 3306 is default for SQL
    volumes:                                # Store DB information in a volume
      - q2a_db_volume:/var/lib/mysql        # Note this volume is on the HOST MACHINE, managed by Docker

volumes:                                    # Define the volume used for the DB
  q2a_db_volume:                            # This volume is stored on /var/lib/docker/volumes/ (on Linux)