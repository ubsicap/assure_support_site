on:
  # pull_request:
  #   branches:
  #     - master
  #     - mattgetgen/github-action
  #   types:
  #     - opened
  #     - synchronize
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

name: Release Please

jobs:
  release-please:
    runs-on: ubuntu-latest
    # environment: build-default
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          release-type: php
          manifest-file: .release-please-manifest.json

      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        if: ${{ steps.release.outputs.releases_created }}

      - name: Generate Tag Version
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "major: ${{ steps.release.outputs.major }}"
          echo "minor: ${{ steps.release.outputs.minor }}"
          echo "patch: ${{ steps.release.outputs.patch }}"
          # export tag_ver=`sed 's/support-bible-v//g' <(echo ${{ steps.release.outputs.tag_name }})`
          # echo "tag_ver: ${tag_ver}"
          # echo "tag_ver=${tag_ver}" >> "$GITHUB_ENV"

      ## Image Build & DockerHub Delivery
      - name: Login to Docker Hub
        if: ${{ steps.release.outputs.releases_created }}
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.releases_created }}
        uses: docker/setup-buildx-action@885d1462b80bc1c1c7f0b00334ad271f09369c55 # v2.10.0

      - name: Build & Deliver Image to Docker Hub
        if: ${{ steps.release.outputs.releases_created }}
        run: |
          echo "tag_ver: ${{ env.tag_ver }}"
          echo "DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}"
          # if [ $tag_ver == "" ]; then
          #    echo "tag_ver must be set"
          #    exit 1
          # fi
          docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}/sb-php:latest" .

          # docker tag sb-php:latest "${{ secrets.DOCKER_HUB_USERNAME }}/sb-php:$(tag_ver)"
          docker push "${{ secrets.DOCKER_HUB_USERNAME }}/sb-php:latest:

          # docker push "${{ secrets.DOCKER_HUB_USERNAME }}/sb-php:$(tag_ver)"

